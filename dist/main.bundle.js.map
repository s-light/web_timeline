{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/navigation.js","webpack:///./src/index.js","webpack:///./src/timeline.js","webpack:///./src/editor.js","webpack:///./src/listview.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","toggleView","event","target_el","el","document","querySelectorAll","classList","remove","add","window","addEventListener","console","log","groupCollapsed","nav_el","querySelector","li_el","hasAttribute","target_id","getAttribute","getElementById","groupEnd","init","data","entries","debug_data","[object Object]","parent_el","svg_el","this","parent","raw_data_format_input_el","text_input_el","my_rawparser","format_input_el","data_json_el","data_update_event_name","separator","data_format","parse","raw_format","trim","part","split","push","lines","line_index","line","parts","length","entry","index","textContent","prettyprint","update_event","CustomEvent","bubbles","detail","message","dispatchEvent","obj","JSON","stringify","textarea_el","wrapper_el","createElement","before","linenumbers_el","setAttribute","id","append","update","line_count","match","line_numbers","Array","keys","join","main_el","parentElement","page","table","thead","tbody","tr","part_name","td"],"mappings":"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","file":"main.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","'use strict';\n\nimport './navigation.css';\n\nexport default function init() {\n    console.groupCollapsed('navigation');\n    const nav_el = document.querySelector('header > nav > ul');\n    console.log('nav_el', nav_el);\n    if (nav_el) {\n        for (const li_el of nav_el.querySelectorAll('li')) {\n            console.log('li_el', li_el);\n            if (li_el.hasAttribute('data-target_id')) {\n                const target_id = li_el.getAttribute('data-target_id');\n                const target_el = document.getElementById(target_id);\n                if (target_el) {\n                    target_el.classList.add('nav_toggle');\n                    li_el.addEventListener(\n                        'click',\n                        event => {\n                            // console.log(this);\n                            toggleView(event, target_el);\n                        }\n                    );\n                }\n            }\n        }\n    }\n    console.groupEnd();\n}\n\nfunction toggleView(event, target_el) {\n    // console.log(event, target_el);\n    for (const el of document.querySelectorAll('.nav_toggle')) {\n        if (el === target_el) {\n            el.classList.remove('hidden');\n        }\n        else {\n            el.classList.add('hidden');\n        }\n    }\n}\n","'use strict';\n\nimport './index.css';\nimport './fancy_background.css';\n\nimport navigation_init from './navigation.js';\nimport * as timeline_module from './timeline.js';\nimport * as editor_module from './editor.js';\nimport * as listview_module from './listview.js';\n\n\n\n\n// window.addEventListener('load', function(event) {\nwindow.addEventListener('load', function() {\n    console.log('init application');\n    navigation_init();\n\n    let data = {\n        entries: [],\n    };\n    window.debug_data = data;\n\n    const timeline_el = document.querySelector('#timeline');\n    // const my_timeline = new timeline_module.TimeLine(data, timeline_el);\n    new timeline_module.TimeLine(data, timeline_el);\n\n\n    const raw_data_format_input_el = document.querySelector('#raw_data_format_input');\n    const text_input_el = document.querySelector('#raw_data_input');\n    const data_json_el = document.querySelector('#data_json');\n    // new editor_module.RawParser(\n    const my_rawparser = new editor_module.RawParser(\n        data,\n        text_input_el,\n        raw_data_format_input_el,\n        data_json_el\n    );\n    new editor_module.TextAreaWithLineNumbers(text_input_el);\n\n    const listview_el = document.querySelector('#listview');\n    new listview_module.ListView(\n        data,\n        listview_el,\n        my_rawparser.data_update_event_name\n    );\n\n    document.addEventListener(\n        my_rawparser.data_update_event_name,\n        (event) => {\n            console.log('index.js', event);\n        }\n    );\n    // console.log(my_rawparser.data_update_event_name);\n\n});\n\n// function showNow() {\n//     console.groupCollapsed('show Now');\n//     // const timeline_el = document.querySelector('#timeline');\n//     // // console.log('timeline_el', timeline_el);\n//     // if (timeline_el) {\n//     //     // let now_el = timeline_el.querySelector('#now');\n//     //     // if (!now_el) {\n//     //     //     now_el = document.createElement('section');\n//     //     //     now_el.id = 'now';\n//     //     //     console.log('now_el', now_el);\n//     //     //     timeline_el.append(now_el);\n//     //     // }\n//     //     // now_el.textContent = moment().format('DD.MM.YYYY HH:mm:ss');\n//     // }\n//     console.groupEnd();\n// }\n","'use strict';\n\nimport './timeline.css';\n\n// import moment from 'moment';\n\n\nexport class TimeLine {\n    constructor(data, parent_el, svg_el=undefined) {\n        console.groupCollapsed('timeline');\n\n        this.data = data;\n        this.parent = parent_el;\n\n        if (svg_el) {\n            this.svg_el = svg_el;\n        }\n        else {\n            // search for svg\n            this.svg_el = this.parent.querySelector('svg');\n        }\n        console.log('this.svg_el', this.svg_el);\n        console.groupEnd();\n    }\n}\n\n// D3 TimelineChart\n// https://github.com/commodityvectors/d3-timeline\n\n// EventDrops\n// https://github.com/marmelab/EventDrops\n\n// math for zoom and pan svg documents\n// http://www.petercollingridge.co.uk/tutorials/svg/interactive/pan-and-zoom/\n\n// zoom and pan library\n// https://github.com/ariutta/svg-pan-zoom\n\n// easing\n// https://github.com/camille-hdl/animatePaper.js/issues/10#issuecomment-290918462\n","import './editor.css';\n\nexport class RawParser {\n    constructor(data, text_input_el, format_input_el, data_json_el) {\n        console.groupCollapsed('RawParser');\n\n        this.data_update_event_name = 'data_update';\n\n        this.data = data;\n        this.format_input_el = format_input_el;\n        this.text_input_el = text_input_el;\n        this.data_json_el = data_json_el;\n\n        this.separator = '; ';\n        this.data_format = [];\n\n        this.text_input_el.addEventListener(\n            'input',\n            () => {\n                this.parse();\n            }\n        );\n\n        this.parse();\n\n        // console.log('this.text_input_el', this.text_input_el);\n        console.groupEnd();\n    }\n\n    parse() {\n        // update data_format\n        let raw_format = this.format_input_el.value.trim();\n        // console.log('raw_format', raw_format);\n        this.data_format = [];\n        for (let part of raw_format.split(this.separator)) {\n            this.data_format.push(part.trim());\n        }\n        // console.log('this.data_format', this.data_format);\n\n        this.data.entries = [];\n        // let raw_text = this.text_input_el.value;\n        let raw_text = this.text_input_el.value.trim();\n        // console.log('raw_text\\n\\n', raw_text);\n        let lines = raw_text.split('\\n');\n        for (let [line_index, line] of lines.entries()) {\n            // this.parseline(line);\n            line = line.trim();\n            // console.log('line: \\'' + line + '\\'');\n            const parts = line.split(this.separator);\n            if (parts.length >= this.data_format.length) {\n                let entry = {};\n                entry['line'] = line_index;\n                for (let [index, part] of parts.entries()) {\n                    entry[this.data_format[index]] = part.trim();\n                }\n                this.data.entries.push(entry);\n            }\n        }\n\n        // console.log(this.prettyprint(this.data.entries));\n        this.data_json_el.textContent = this.prettyprint(this.data.entries);\n\n        // inform all that the data has changed..\n        // https://developer.mozilla.org/en-US/docs/Web/Guide/Events/Creating_and_triggering_events\n        // https://developer.mozilla.org/en-US/docs/Web/API/Event/Event\n        const update_event = new CustomEvent(\n            this.data_update_event_name,\n            {\n                bubbles: true,\n                detail: {\n                    data: this.data,\n                    message: 'parsed ♥',\n                },\n            }\n        );\n        this.text_input_el.dispatchEvent(update_event);\n        // console.log('parsed ♥');\n    }\n\n    prettyprint(obj) {\n        return JSON.stringify(obj, null, 2);\n    }\n}\n\nexport class TextAreaWithLineNumbers {\n    constructor(textarea_el) {\n        console.groupCollapsed('TextAreaWithLineNumbers');\n\n        this.init(textarea_el);\n\n        console.log('this.textarea_el', this.textarea_el);\n        console.groupEnd();\n    }\n\n    init(textarea_el) {\n        this.textarea_el = textarea_el;\n        this.wrapper_el = document.createElement('div');\n        this.wrapper_el.classList.add('textarea-wrapper');\n        this.textarea_el.before(this.wrapper_el);\n\n        this.linenumbers_el = document.createElement('label');\n        this.linenumbers_el.setAttribute('for', this.textarea_el.id);\n        this.linenumbers_el.textContent = '♥';\n\n\n        this.wrapper_el.append(this.linenumbers_el);\n        this.wrapper_el.append(this.textarea_el);\n        // console.log(this.wrapper_el);\n\n        this.textarea_el.addEventListener(\n            'input',\n            () => {\n                this.update();\n            }\n        );\n\n        this.update();\n    }\n\n    update() {\n        // console.log('update');\n        // update data_format\n        // console.log('this.textarea_el.textContent', this.textarea_el.value);\n        let line_count = this.textarea_el.value.match(/\\n/g).length + 1;\n        // console.log('line_count', line_count);\n        let line_numbers =  [...Array(line_count).keys()].join('\\n');\n        // console.log('line_numbers', line_numbers);\n        this.textarea_el.setAttribute('rows', line_count + 1);\n        this.linenumbers_el.textContent = line_numbers;\n    }\n\n}\n","'use strict';\n\nimport './listview.css';\n\n// import moment from 'moment';\n\n\nexport class ListView {\n    constructor(data, main_el, data_update_event_name) {\n        console.groupCollapsed('listview');\n\n        this.data_update_event_name = data_update_event_name;\n        this.data = data;\n        this.main_el = main_el;\n        console.log('this.main_el', this.main_el);\n\n        this.init();\n        this.update();\n\n        // console.log(this.data_update_event_name);\n        this.main_el.parentElement.addEventListener(\n            this.data_update_event_name,\n            (event) => {\n                // console.log('ping');\n                this.update(event);\n            }\n        );\n\n        console.groupEnd();\n    }\n\n    init() {\n        this.page = document.createElement('section');\n        this.page.classList.add('DINA4');\n\n        this.table = document.createElement('table');\n        // this.table.classList.add('');\n        this.thead = document.createElement('thead');\n        this.table.append(this.thead);\n        this.tbody = document.createElement('tbody');\n        this.table.append(this.tbody);\n\n        this.page.append(this.table);\n        this.main_el.append(this.page);\n    }\n\n    update(event) {\n        console.log('listview update', event);\n        // clean up.\n        this.thead.remove();\n        this.tbody.remove();\n        // recreate\n        this.thead = document.createElement('thead');\n        this.table.append(this.thead);\n        this.tbody = document.createElement('tbody');\n        this.table.append(this.tbody);\n\n        for (let entry of this.data.entries) {\n            console.log(entry);\n            const tr = document.createElement('tr');\n            this.tbody.append(tr);\n            // for (let format_obj of this.format) {\n            //\n            // }\n            for (let part_name in entry) {\n                const td = document.createElement('td');\n                tr.append(td);\n                td.textContent = entry[part_name];\n            }\n\n        }\n    }\n}\n"],"sourceRoot":""}